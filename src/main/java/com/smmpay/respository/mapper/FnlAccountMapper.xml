<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smmpay.respository.dao.FnlAccountMapper" >
  <resultMap id="BaseResultMap" type="com.smmpay.respository.model.FnlAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
    <result column="createdAt" property="createdat" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdby" jdbcType="INTEGER" />
    <result column="updatedAt" property="updatedat" jdbcType="TIMESTAMP" />
    <result column="updatedBy" property="updatedby" jdbcType="INTEGER" />
    <result column="isEnabled" property="isenabled" jdbcType="INTEGER" />
    <result column="isLocked" property="islocked" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account, pwd, salt, roleId, createdAt, createdBy, updatedAt, updatedBy, isEnabled, 
    isLocked
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fnl_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fnl_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smmpay.respository.model.FnlAccount" >
    insert into fnl_account (id, account, pwd, 
      salt, roleId, createdAt, 
      createdBy, updatedAt, updatedBy, 
      isEnabled, isLocked)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}, #{createdat,jdbcType=TIMESTAMP}, 
      #{createdby,jdbcType=INTEGER}, #{updatedat,jdbcType=TIMESTAMP}, #{updatedby,jdbcType=INTEGER}, 
      #{isenabled,jdbcType=INTEGER}, #{islocked,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smmpay.respository.model.FnlAccount" >
    insert into fnl_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="createdat != null" >
        createdAt,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="updatedat != null" >
        updatedAt,
      </if>
      <if test="updatedby != null" >
        updatedBy,
      </if>
      <if test="isenabled != null" >
        isEnabled,
      </if>
      <if test="islocked != null" >
        isLocked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="createdat != null" >
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="updatedat != null" >
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null" >
        #{updatedby,jdbcType=INTEGER},
      </if>
      <if test="isenabled != null" >
        #{isenabled,jdbcType=INTEGER},
      </if>
      <if test="islocked != null" >
        #{islocked,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smmpay.respository.model.FnlAccount" >
    update fnl_account
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="createdat != null" >
        createdAt = #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="updatedat != null" >
        updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedby != null" >
        updatedBy = #{updatedby,jdbcType=INTEGER},
      </if>
      <if test="isenabled != null" >
        isEnabled = #{isenabled,jdbcType=INTEGER},
      </if>
      <if test="islocked != null" >
        isLocked = #{islocked,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smmpay.respository.model.FnlAccount" >
    update fnl_account
    set account = #{account,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      roleId = #{roleid,jdbcType=INTEGER},
      createdAt = #{createdat,jdbcType=TIMESTAMP},
      createdBy = #{createdby,jdbcType=INTEGER},
      updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      updatedBy = #{updatedby,jdbcType=INTEGER},
      isEnabled = #{isenabled,jdbcType=INTEGER},
      isLocked = #{islocked,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>