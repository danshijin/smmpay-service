<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smmpay.respository.dao.SCheckBankRecordMapper" >
  <resultMap id="BaseResultMap" type="com.smmpay.respository.model.SCheckBankRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="bank_no" property="bankNo" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="user_band_id" property="userBandId" jdbcType="INTEGER" />
    <result column="input_money" property="inputMoney" jdbcType="DECIMAL" />
    <result column="check_time" property="checkTime" jdbcType="VARCHAR" />
    <result column="check_result" property="checkResult" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, bank_no, bank_name, user_band_id, input_money, check_time, check_result
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from s_check_band_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from s_check_band_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smmpay.respository.model.SCheckBankRecord" >
    insert into s_check_band_record (id, user_id, bank_no, 
      bank_name, user_band_id, input_money, 
      check_time, check_result)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bankNo,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{userBandId,jdbcType=INTEGER}, #{inputMoney,jdbcType=DECIMAL}, 
      #{checkTime,jdbcType=VARCHAR}, #{checkResult,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smmpay.respository.model.SCheckBankRecord" >
    insert into s_check_band_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bankNo != null" >
        bank_no,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="userBandId != null" >
        user_band_id,
      </if>
      <if test="inputMoney != null" >
        input_money,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="checkResult != null" >
        check_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankNo != null" >
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="userBandId != null" >
        #{userBandId,jdbcType=INTEGER},
      </if>
      <if test="inputMoney != null" >
        #{inputMoney,jdbcType=DECIMAL},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null" >
        #{checkResult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smmpay.respository.model.SCheckBankRecord" >
    update s_check_band_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankNo != null" >
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="userBandId != null" >
        user_band_id = #{userBandId,jdbcType=INTEGER},
      </if>
      <if test="inputMoney != null" >
        input_money = #{inputMoney,jdbcType=DECIMAL},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null" >
        check_result = #{checkResult,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smmpay.respository.model.SCheckBankRecord" >
    update s_check_band_record
    set user_id = #{userId,jdbcType=INTEGER},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      user_band_id = #{userBandId,jdbcType=INTEGER},
      input_money = #{inputMoney,jdbcType=DECIMAL},
      check_time = #{checkTime,jdbcType=VARCHAR},
      check_result = #{checkResult,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByBindBankId" resultType="java.lang.Integer"  parameterType="com.smmpay.respository.model.SCheckBankRecord">
    select count(id) from s_check_band_record
    where user_band_id = #{userBandId,jdbcType=VARCHAR} AND check_time > #{checkTime,jdbcType=VARCHAR} AND check_result = 1
  </select>
</mapper>