<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smmpay.respository.dao.UserMoneyExceptionMapper" >
  <resultMap id="BaseResultMap" type="com.smmpay.respository.model.UserMoneyException" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_company_name" property="userCompanyName" jdbcType="VARCHAR" />
    <result column="operate" property="operate" jdbcType="INTEGER" />
    <result column="payment_id" property="paymentId" jdbcType="INTEGER" />
    <result column="pay_channel_id" property="payChannelId" jdbcType="INTEGER" />
    <result column="user_pay_channel_account" property="userPayChannelAccount" jdbcType="VARCHAR" />
    <result column="user_pay_channel_money" property="userPayChannelMoney" jdbcType="DECIMAL" />
    <result column="user_money" property="userMoney" jdbcType="DECIMAL" />
    <result column="audit_user_id" property="auditUserId" jdbcType="INTEGER" />
    <result column="audit_time" property="auditTime" jdbcType="VARCHAR" />
    <result column="audit_status" property="auditStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, user_id, user_company_name, operate, payment_id, pay_channel_id, 
    user_pay_channel_account, user_pay_channel_money, user_money, audit_user_id, audit_time, 
    audit_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_money_exception
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_money_exception
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smmpay.respository.model.UserMoneyException" >
    insert into user_money_exception (id, create_time, user_id, 
      user_company_name, operate, payment_id, 
      pay_channel_id, user_pay_channel_account, user_pay_channel_money, 
      user_money, audit_user_id, audit_time, 
      audit_status)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{userCompanyName,jdbcType=VARCHAR}, #{operate,jdbcType=INTEGER}, #{paymentId,jdbcType=INTEGER}, 
      #{payChannelId,jdbcType=INTEGER}, #{userPayChannelAccount,jdbcType=VARCHAR}, #{userPayChannelMoney,jdbcType=DECIMAL}, 
      #{userMoney,jdbcType=DECIMAL}, #{auditUserId,jdbcType=INTEGER}, #{auditTime,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smmpay.respository.model.UserMoneyException" >
    insert into user_money_exception
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userCompanyName != null" >
        user_company_name,
      </if>
      <if test="operate != null" >
        operate,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="payChannelId != null" >
        pay_channel_id,
      </if>
      <if test="userPayChannelAccount != null" >
        user_pay_channel_account,
      </if>
      <if test="userPayChannelMoney != null" >
        user_pay_channel_money,
      </if>
      <if test="userMoney != null" >
        user_money,
      </if>
      <if test="auditUserId != null" >
        audit_user_id,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userCompanyName != null" >
        #{userCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        #{operate,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="payChannelId != null" >
        #{payChannelId,jdbcType=INTEGER},
      </if>
      <if test="userPayChannelAccount != null" >
        #{userPayChannelAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPayChannelMoney != null" >
        #{userPayChannelMoney,jdbcType=DECIMAL},
      </if>
      <if test="userMoney != null" >
        #{userMoney,jdbcType=DECIMAL},
      </if>
      <if test="auditUserId != null" >
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smmpay.respository.model.UserMoneyException" >
    update user_money_exception
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userCompanyName != null" >
        user_company_name = #{userCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="operate != null" >
        operate = #{operate,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=INTEGER},
      </if>
      <if test="payChannelId != null" >
        pay_channel_id = #{payChannelId,jdbcType=INTEGER},
      </if>
      <if test="userPayChannelAccount != null" >
        user_pay_channel_account = #{userPayChannelAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPayChannelMoney != null" >
        user_pay_channel_money = #{userPayChannelMoney,jdbcType=DECIMAL},
      </if>
      <if test="userMoney != null" >
        user_money = #{userMoney,jdbcType=DECIMAL},
      </if>
      <if test="auditUserId != null" >
        audit_user_id = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smmpay.respository.model.UserMoneyException" >
    update user_money_exception
    set create_time = #{createTime,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_company_name = #{userCompanyName,jdbcType=VARCHAR},
      operate = #{operate,jdbcType=INTEGER},
      payment_id = #{paymentId,jdbcType=INTEGER},
      pay_channel_id = #{payChannelId,jdbcType=INTEGER},
      user_pay_channel_account = #{userPayChannelAccount,jdbcType=VARCHAR},
      user_pay_channel_money = #{userPayChannelMoney,jdbcType=DECIMAL},
      user_money = #{userMoney,jdbcType=DECIMAL},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 账户是否有异常记录 -->
   <select id="queryUMExceByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_money_exception
    where user_id = #{userId,jdbcType=INTEGER} and  audit_status = 0
  </select>
</mapper>